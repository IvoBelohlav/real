/* MessageInput.module.css */

.container {
  position: relative;
  padding: 0.75rem; /* p-3 */
  background-color: var(--input-container-bg); /* Use CSS variable */
  border-top: 1px solid var(--input-border-top-color); /* Use CSS variable */
  box-shadow: 0 -4px 6px -1px var(--input-shadow-color); /* Use CSS variable */
  box-sizing: border-box;
}

.form {
  display: flex;
  align-items: flex-end; /* Align items to the bottom for multi-line text */
  gap: 0.5rem; /* gap-2 */
  width: 100%;
  box-sizing: border-box;
}

.inputContainer {
  flex: 1;
  position: relative;
  display: flex; /* Make container flex to align textarea */
  box-sizing: border-box;
}

.textarea {
  flex: 1;
  resize: none;
  width: 100%;
  box-sizing: border-box;
  border-radius: 0.5rem; /* rounded-lg, slightly larger */
  font-size: 0.875rem !important; /* text-sm */
  background-color: var(--input-bg-color); /* Use CSS variable */
  color: var(--input-text-color); /* Use CSS variable */
  border: 1px solid transparent; /* Start with transparent border */
  padding: 0.4rem 0.75rem; /* Adjusted vertical padding (py-1.5) */
  min-height: 38px; /* Ensure minimum height matches button */
  max-height: 80px; /* Increased max height slightly */
  line-height: 1.4; /* Adjusted line-height */
  transition: all 0.2s ease-in-out;
  overflow-y: auto; /* Enable scrollbar when needed */
}

.textarea::placeholder {
  color: var(--input-placeholder-color); /* Use CSS variable */
  opacity: 0.8;
  transition: opacity 0.2s ease;
}

.textarea:focus::placeholder {
  opacity: 0.5;
}

.textarea:focus,
.textarea:focus-visible {
  outline: none !important;
  border-color: transparent !important; /* Keep border transparent */
  box-shadow: 0 0 0 2px var(--input-focus-shadow-color) !important; /* Use CSS variable for focus */
}

/* Custom Scrollbar Styles */
.textarea::-webkit-scrollbar {
  width: 6px;
}
.textarea::-webkit-scrollbar-track {
  background: var(--scrollbar-track-color); /* Use CSS variable */
  border-radius: 8px;
  margin: 4px 0; /* Add margin to track */
}
.textarea::-webkit-scrollbar-thumb {
  background: var(--scrollbar-thumb-color); /* Use CSS variable */
  border-radius: 8px;
  transition: background 0.2s ease;
}
.textarea::-webkit-scrollbar-thumb:hover {
  background: var(--scrollbar-thumb-hover-color); /* Use CSS variable */
}

.submitButton {
  padding: 0.625rem; /* p-2.5 for slightly larger button */
  border-radius: 0.5rem; /* rounded-lg */
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s ease-in-out;
  border: none;
  height: 38px; /* Match min-height of textarea */
  width: 38px; /* Make it square */
  flex-shrink: 0; /* Prevent button from shrinking */
  background-color: var(--button-bg-color); /* Use CSS variable */
  color: var(--button-text-color); /* Use CSS variable */
  cursor: var(--button-cursor); /* Use CSS variable */
  opacity: var(--button-opacity); /* Use CSS variable */
}

.submitButton:focus {
  outline: none;
  box-shadow: 0 0 0 2px var(--input-focus-shadow-color) !important; /* Consistent focus */
}

.submitButton:disabled {
  opacity: 0.5;
  cursor: default;
}

.icon {
  height: 1.125rem; /* h-4.5 */
  width: 1.125rem; /* w-4.5 */
}

.loadingIcon {
  height: 1.125rem; /* h-4.5 */
  width: 1.125rem; /* w-4.5 */
  animation: spin 1s linear infinite;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
