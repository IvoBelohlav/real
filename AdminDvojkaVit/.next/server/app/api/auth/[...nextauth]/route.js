"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/auth/[...nextauth]/route";
exports.ids = ["app/api/auth/[...nextauth]/route"];
exports.modules = {

/***/ "../../client/components/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("querystring");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&page=%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute.js&appDir=E%3A%5CFullstack-applicationOfficial%5CFullstack-application%206.3%5CAdminDvojkaVit%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=E%3A%5CFullstack-applicationOfficial%5CFullstack-application%206.3%5CAdminDvojkaVit&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&page=%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute.js&appDir=E%3A%5CFullstack-applicationOfficial%5CFullstack-application%206.3%5CAdminDvojkaVit%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=E%3A%5CFullstack-applicationOfficial%5CFullstack-application%206.3%5CAdminDvojkaVit&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var E_Fullstack_applicationOfficial_Fullstack_application_6_3_AdminDvojkaVit_src_app_api_auth_nextauth_route_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/auth/[...nextauth]/route.js */ \"(rsc)/./src/app/api/auth/[...nextauth]/route.js\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/auth/[...nextauth]/route\",\n        pathname: \"/api/auth/[...nextauth]\",\n        filename: \"route\",\n        bundlePath: \"app/api/auth/[...nextauth]/route\"\n    },\n    resolvedPagePath: \"E:\\\\Fullstack-applicationOfficial\\\\Fullstack-application 6.3\\\\AdminDvojkaVit\\\\src\\\\app\\\\api\\\\auth\\\\[...nextauth]\\\\route.js\",\n    nextConfigOutput,\n    userland: E_Fullstack_applicationOfficial_Fullstack_application_6_3_AdminDvojkaVit_src_app_api_auth_nextauth_route_js__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/auth/[...nextauth]/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhdXRoJTJGJTVCLi4ubmV4dGF1dGglNUQlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmF1dGglMkYlNUIuLi5uZXh0YXV0aCU1RCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmF1dGglMkYlNUIuLi5uZXh0YXV0aCU1RCUyRnJvdXRlLmpzJmFwcERpcj1FJTNBJTVDRnVsbHN0YWNrLWFwcGxpY2F0aW9uT2ZmaWNpYWwlNUNGdWxsc3RhY2stYXBwbGljYXRpb24lMjA2LjMlNUNBZG1pbkR2b2prYVZpdCU1Q3NyYyU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9RSUzQSU1Q0Z1bGxzdGFjay1hcHBsaWNhdGlvbk9mZmljaWFsJTVDRnVsbHN0YWNrLWFwcGxpY2F0aW9uJTIwNi4zJTVDQWRtaW5Edm9qa2FWaXQmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQzBFO0FBQ3ZKO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHZvamthdml0LWFkbWluLz83ZGU4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIkU6XFxcXEZ1bGxzdGFjay1hcHBsaWNhdGlvbk9mZmljaWFsXFxcXEZ1bGxzdGFjay1hcHBsaWNhdGlvbiA2LjNcXFxcQWRtaW5Edm9qa2FWaXRcXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxcYXV0aFxcXFxbLi4ubmV4dGF1dGhdXFxcXHJvdXRlLmpzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9hdXRoL1suLi5uZXh0YXV0aF0vcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9hdXRoL1suLi5uZXh0YXV0aF1cIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2F1dGgvWy4uLm5leHRhdXRoXS9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkU6XFxcXEZ1bGxzdGFjay1hcHBsaWNhdGlvbk9mZmljaWFsXFxcXEZ1bGxzdGFjay1hcHBsaWNhdGlvbiA2LjNcXFxcQWRtaW5Edm9qa2FWaXRcXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxcYXV0aFxcXFxbLi4ubmV4dGF1dGhdXFxcXHJvdXRlLmpzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9hdXRoL1suLi5uZXh0YXV0aF0vcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&page=%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute.js&appDir=E%3A%5CFullstack-applicationOfficial%5CFullstack-application%206.3%5CAdminDvojkaVit%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=E%3A%5CFullstack-applicationOfficial%5CFullstack-application%206.3%5CAdminDvojkaVit&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/auth/[...nextauth]/route.js":
/*!*************************************************!*\
  !*** ./src/app/api/auth/[...nextauth]/route.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ handler),\n/* harmony export */   POST: () => (/* binding */ handler),\n/* harmony export */   authOptions: () => (/* binding */ authOptions)\n/* harmony export */ });\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth */ \"(rsc)/./node_modules/next-auth/index.js\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/providers/credentials */ \"(rsc)/./node_modules/next-auth/providers/credentials.js\");\n/* harmony import */ var _lib_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../lib/api */ \"(rsc)/./src/lib/api.js\");\n\n\n // Keep this for login\n// Define the backend API URL (ensure this is set in your environment)\nconst BACKEND_API_URL = \"http://localhost:8000\" || 0;\nconst authOptions = {\n    providers: [\n        (0,next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({\n            name: \"Credentials\",\n            credentials: {\n                email: {\n                    label: \"Email\",\n                    type: \"email\"\n                },\n                password: {\n                    label: \"Password\",\n                    type: \"password\"\n                }\n            },\n            async authorize (credentials) {\n                try {\n                    const result = await _lib_api__WEBPACK_IMPORTED_MODULE_2__.authAPI.login(credentials.email, credentials.password);\n                    console.log(\"[NextAuth Authorize] Login API Result:\", result);\n                    if (result.success && result.data) {\n                        const userId = result.data.user_id || result.data.id; // Get the ID\n                        console.log(`[NextAuth Authorize] User ID from backend: ${userId}`);\n                        console.log(`[NextAuth Authorize] Access Token from backend: ${result.data.access_token ? \"Present\" : \"Missing\"}`);\n                        return {\n                            id: userId,\n                            email: credentials.email,\n                            name: result.data.username || result.data.email,\n                            token: result.data.access_token,\n                            refreshToken: result.data.refresh_token\n                        };\n                    }\n                    console.log(\"[NextAuth Authorize] Login failed or no data returned.\");\n                    return null;\n                } catch (error) {\n                    console.error(\"[NextAuth Authorize] Auth error:\", error);\n                    return null;\n                }\n            }\n        })\n    ],\n    session: {\n        strategy: \"jwt\",\n        maxAge: 30 * 24 * 60 * 60\n    },\n    callbacks: {\n        async jwt ({ token, user, account }) {\n            // Initial sign in: User object is available\n            if (account && user) {\n                console.log(\"[NextAuth JWT Callback - Initial Sign In] User object:\", user);\n                token.id = user.id; // Set initial ID from authorize result\n                token.email = user.email;\n                token.accessToken = user.token;\n                token.refreshToken = user.refreshToken;\n                console.log(`[NextAuth JWT Callback - Initial Sign In] Token after initial assignment:`, token);\n            }\n            // Fetch/refresh profile data if access token exists\n            if (token.accessToken) {\n                try {\n                    console.log(`[NextAuth JWT Callback] Attempting to fetch /api/users/me. Current token ID: ${token.id}`);\n                    const profileResponse = await fetch(`${BACKEND_API_URL}/api/users/me`, {\n                        headers: {\n                            \"Authorization\": `Bearer ${token.accessToken}`\n                        }\n                    });\n                    if (profileResponse.ok) {\n                        const profileData = await profileResponse.json();\n                        console.log(`[NextAuth JWT Callback] Profile data received:`, profileData);\n                        // --- Log before and after ID update ---\n                        console.log(`[NextAuth JWT Callback] Token ID *before* profile update: ${token.id}`);\n                        console.log(`[NextAuth JWT Callback] Profile data ID received: ${profileData.id}`);\n                        if (profileData.id) {\n                            token.id = profileData.id; // Update token.id from profile\n                            console.log(`[NextAuth JWT Callback] Token ID *after* profile update: ${token.id}`);\n                        } else {\n                            console.warn(`[NextAuth JWT Callback] Profile data missing 'id' field. Token ID remains: ${token.id}`);\n                        }\n                        // --- End ID Update Logging ---\n                        // Merge other relevant profile data into the token\n                        token.subscription_status = profileData.subscription_status;\n                        token.subscription_tier = profileData.subscription_tier;\n                        token.api_key = profileData.api_key;\n                        token.is_email_verified = profileData.is_email_verified;\n                        token.company_name = profileData.company_name;\n                        token.username = profileData.username;\n                    // Add other fields as needed\n                    } else {\n                        console.error(`[NextAuth JWT Callback] Failed to fetch user profile: ${profileResponse.status} ${profileResponse.statusText}`);\n                    // Handle potential token expiration/refresh here\n                    // TODO: Implement token refresh logic using token.refreshToken if accessToken is expired\n                    }\n                } catch (error) {\n                    console.error(\"[NextAuth JWT Callback] Error fetching user profile:\", error);\n                }\n            } else {\n                console.warn(\"[NextAuth JWT Callback] No access token found in token object. Cannot fetch profile.\");\n            }\n            console.log(\"[NextAuth JWT Callback] Returning final token:\", token);\n            return token;\n        },\n        async session ({ session, token }) {\n            console.log(\"[NextAuth Session Callback] Received token:\", token);\n            // Populate session.user from the potentially updated token\n            session.user.id = token.id;\n            session.user.email = token.email;\n            // SECURITY NOTE: Exposing the raw access token to the client-side session should be done with caution.\n            // Consider if the frontend truly needs it directly. Prefer using Next.js API routes as a proxy\n            // for backend calls where possible.\n            session.user.token = token.accessToken;\n            session.user.subscription_status = token.subscription_status;\n            session.user.subscription_tier = token.subscription_tier;\n            session.user.api_key = token.api_key;\n            session.user.is_email_verified = token.is_email_verified;\n            session.user.company_name = token.company_name;\n            session.user.username = token.username;\n            console.log(\"[NextAuth Session Callback] Populated final session:\", session);\n            return session;\n        }\n    },\n    pages: {\n        signIn: \"/auth/login\",\n        signOut: \"/auth/logout\"\n    },\n    secret: process.env.NEXTAUTH_SECRET || \"your_fallback_secret_key_but_use_env_variable\"\n};\nconst handler = next_auth__WEBPACK_IMPORTED_MODULE_0___default()(authOptions);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/auth/[...nextauth]/route.js\n");

/***/ }),

/***/ "(rsc)/./src/lib/api.js":
/*!************************!*\
  !*** ./src/lib/api.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authAPI: () => (/* binding */ authAPI),\n/* harmony export */   billingAPI: () => (/* binding */ billingAPI),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   directApi: () => (/* binding */ directApi),\n/* harmony export */   userAPI: () => (/* binding */ userAPI)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"(rsc)/./node_modules/axios/lib/axios.js\");\n/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! js-cookie */ \"(rsc)/./node_modules/js-cookie/dist/js.cookie.mjs\");\n\n // Restore Cookies import\n// Create an axios instance for direct access to the FastAPI backend\n// This should only be used on the server side or for specific endpoints\nconst directApi = axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create({\n    baseURL: \"http://localhost:8000\" || 0,\n    headers: {\n        \"Content-Type\": \"application/json\"\n    },\n    withCredentials: true\n});\n// Create an axios instance that uses the Next.js API routes (which are proxied to FastAPI)\n// This should be used for client-side requests\nconst api = axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create({\n    baseURL: \"/api\",\n    headers: {\n        \"Content-Type\": \"application/json\"\n    },\n    withCredentials: true\n});\n// Restore request interceptor for 'api' instance\napi.interceptors.request.use((config)=>{\n    // Get token from localStorage or cookies (browser-only)\n    let token = null; // Initialize token as null\n    if (false) {}\n    // Add specific logging for the problematic endpoints\n    if (config.url?.includes(\"/invoices\") || config.url?.includes(\"/subscriptions/authorized-domains\")) {\n        console.log(`[API Interceptor] Requesting ${config.url}. Token found: ${!!token}. Header set: ${config.headers.Authorization ? \"Yes\" : \"No\"}`);\n    }\n    return config;\n}, (error)=>Promise.reject(error));\n// Restore request interceptor for 'directApi' instance\ndirectApi.interceptors.request.use((config)=>{\n    // Get token from localStorage or cookies (browser-only)\n    let token = null; // Initialize token as null\n    if (false) {}\n    // Add specific logging for the problematic endpoints (if directApi is used for them)\n    if (config.url?.includes(\"/invoices\") || config.url?.includes(\"/subscriptions/authorized-domains\")) {\n        console.log(`[DirectAPI Interceptor] Requesting ${config.url}. Token found: ${!!token}. Header set: ${config.headers.Authorization ? \"Yes\" : \"No\"}`);\n    }\n    return config;\n}, (error)=>Promise.reject(error));\n// --- JSDoc Type Definitions ---\n/**\n * @typedef {Object} UserDataInput\n * @property {string} email\n * @property {string} password\n * @property {string} firstName\n * @property {string} [lastName]\n * @property {string} [company]\n */ /**\n * @typedef {Object} BackendUserCreate\n * @property {string} username\n * @property {string} email\n * @property {string} password\n * @property {string|null} company_name\n */ /**\n * @typedef {Object} UserInfo\n * @property {string} id\n * @property {string} email\n * @property {string} username\n * @property {string} [company_name]\n * @property {string} subscription_tier\n * @property {string} subscription_status\n * @property {string} [stripe_customer_id]\n * @property {string} [stripe_subscription_id]\n * @property {boolean} is_email_verified\n * @property {string} created_at\n * @property {string} [updated_at]\n * @property {string} [api_key]\n * @property {string[]} [authorized_domains]\n */ /**\n * @typedef {Object} ApiResponseSuccess\n * @property {true} success\n * @property {any} data\n */ /**\n * @typedef {Object} ApiResponseError\n * @property {false} success\n * @property {string} error\n */ /**\n * @typedef {ApiResponseSuccess | ApiResponseError} ApiResponse\n */ // --- End JSDoc Type Definitions ---\n// Authentication API calls\nconst authAPI = {\n    /**\n   * Register a new user\n   * @param {UserDataInput} userData - User registration data from frontend form\n   * @returns {Promise<ApiResponse>} Backend response message or error\n   */ register: async (userData)=>{\n        try {\n            /** @type {BackendUserCreate} */ const backendUserData = {\n                username: userData.firstName + (userData.lastName ? \" \" + userData.lastName : \"\"),\n                email: userData.email,\n                password: userData.password,\n                company_name: userData.company || null\n            };\n            // Use the direct API for registration - FastAPI expects /api prefix\n            // Response should be { message: string } on success\n            const response = await directApi.post(\"/api/auth/register\", backendUserData, {\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                withCredentials: true\n            });\n            return {\n                success: true,\n                data: response.data\n            };\n        } catch (error) {\n            console.error(\"Registration error:\", error);\n            return {\n                success: false,\n                error: error.response?.data?.detail || \"Registration failed. Please try again.\"\n            };\n        }\n    },\n    /**\n   * Login user\n   * @param {string} email\n   * @param {string} password\n   * @returns {Promise<ApiResponse & { data?: { access_token: string, refresh_token: string, token_type: string } }>} Backend response with tokens or error\n   */ login: async (email, password)=>{\n        try {\n            // Use URLSearchParams for form data (OAuth2 format)\n            const formData = new URLSearchParams();\n            formData.append(\"username\", email); // OAuth2 uses 'username' even for email\n            formData.append(\"password\", password);\n            // Use the direct API for login - FastAPI expects /api prefix\n            const response = await directApi.post(\"/api/auth/login\", formData, {\n                headers: {\n                    \"Content-Type\": \"application/x-www-form-urlencoded\"\n                }\n            });\n            return {\n                success: true,\n                data: response.data // Should contain access_token, refresh_token\n            };\n        } catch (error) {\n            console.error(\"Login error:\", error);\n            return {\n                success: false,\n                error: error.response?.data?.detail || \"Login failed. Please try again.\"\n            };\n        }\n    },\n    /**\n   * Get current authenticated user's details\n   * @returns {Promise<ApiResponse & { data?: UserInfo }>} User info or error\n   */ getCurrentUser: async ()=>{\n        try {\n            const response = await api.get(\"/users/me\"); // Uses proxied API with interceptor\n            return {\n                success: true,\n                data: response.data\n            };\n        } catch (error) {\n            console.error(\"Get current user error:\", error);\n            return {\n                success: false,\n                error: error.response?.data?.detail || \"Failed to get user information.\"\n            };\n        }\n    },\n    /**\n   * Request password reset email\n   * @param {string} email\n   * @returns {Promise<ApiResponse>} Backend response message or error\n   */ requestPasswordReset: async (email)=>{\n        try {\n            const response = await directApi.post(\"/api/auth/forgot-password\", {\n                email\n            });\n            return {\n                success: true,\n                data: response.data\n            };\n        } catch (error) {\n            console.error(\"Password reset request error:\", error);\n            return {\n                success: false,\n                error: error.response?.data?.detail || \"Password reset request failed.\"\n            };\n        }\n    },\n    /**\n   * Reset password using token\n   * @param {string} token - Password reset token from email link\n   * @param {string} newPassword\n   * @returns {Promise<ApiResponse>} Backend response message or error\n   */ resetPassword: async (token, newPassword)=>{\n        try {\n            const response = await directApi.post(`/api/auth/reset-password/${token}`, {\n                password: newPassword\n            });\n            return {\n                success: true,\n                data: response.data\n            };\n        } catch (error) {\n            console.error(\"Password reset error:\", error);\n            return {\n                success: false,\n                error: error.response?.data?.detail || \"Password reset failed.\"\n            };\n        }\n    },\n    /**\n   * Verify email using token\n   * @param {string} token - Verification token from email link\n   * @returns {Promise<ApiResponse>} Backend response message or error\n   */ verifyEmail: async (token)=>{\n        try {\n            const response = await directApi.get(`/api/auth/verify-email/${token}`);\n            return {\n                success: true,\n                data: response.data\n            };\n        } catch (error) {\n            console.error(\"Email verification error:\", error);\n            return {\n                success: false,\n                error: error.response?.data?.detail || \"Email verification failed.\"\n            };\n        }\n    }\n};\n/**\n * @typedef {Object} UserProfileUpdateData\n * @property {string} [username]\n * @property {string} [company_name]\n * // Add other updatable profile fields here if any\n */ /**\n * @typedef {Object} ChangePasswordData\n * @property {string} current_password\n * @property {string} new_password\n */ // User API calls - use proxied API\nconst userAPI = {\n    /**\n   * Update user profile\n   * @param {UserProfileUpdateData} userData - Data to update\n   * @returns {Promise<ApiResponse & { data?: UserInfo }>} Updated user info or error\n   */ updateProfile: async (userData)=>{\n        try {\n            const response = await api.put(\"/users/profile\", userData);\n            return {\n                success: true,\n                data: response.data\n            };\n        } catch (error) {\n            console.error(\"Update profile error:\", error);\n            return {\n                success: false,\n                error: error.response?.data?.detail || \"Profile update failed.\"\n            };\n        }\n    },\n    /**\n   * Change user password\n   * @param {string} currentPassword\n   * @param {string} newPassword\n   * @returns {Promise<ApiResponse>} Success/error message\n   */ changePassword: async (currentPassword, newPassword)=>{\n        try {\n            const response = await api.post(\"/users/change-password\", {\n                current_password: currentPassword,\n                new_password: newPassword\n            });\n            return {\n                success: true,\n                data: response.data\n            };\n        } catch (error) {\n            console.error(\"Change password error:\", error);\n            return {\n                success: false,\n                error: error.response?.data?.detail || \"Password change failed.\"\n            };\n        }\n    }\n};\n/**\n * @typedef {Object} CheckoutSessionResponseData\n * @property {string} checkout_url\n * @property {string} session_id\n */ /**\n * @typedef {Object} CustomerPortalResponseData\n * @property {string} portal_url\n */ /**\n * @typedef {Object} SubscriptionStatusData\n * @property {string} status - e.g., \"active\", \"inactive\", \"trialing\"\n * @property {string|null} tier - e.g., \"free\", \"basic\", \"premium\"\n * @property {string|null} current_period_end - ISO date string\n * @property {boolean} cancel_at_period_end\n */ // Subscription and billing API calls - use proxied API\nconst billingAPI = {\n    /**\n   * Create Stripe checkout session\n   * @param {string} priceId - Stripe Price ID\n   * @returns {Promise<ApiResponse & { data?: CheckoutSessionResponseData }>} Checkout session URL/ID or error\n   */ createCheckoutSession: async (priceId)=>{\n        try {\n            const response = await api.post(\"/checkout/session\", {\n                price_id: priceId\n            });\n            return {\n                success: true,\n                data: response.data\n            };\n        } catch (error) {\n            console.error(\"Create checkout session error:\", error);\n            return {\n                success: false,\n                error: error.response?.data?.detail || \"Failed to create checkout session.\"\n            };\n        }\n    },\n    /**\n   * Get Stripe customer portal URL\n   * @returns {Promise<ApiResponse & { data?: CustomerPortalResponseData }>} Portal URL or error\n   */ getCustomerPortalUrl: async ()=>{\n        try {\n            const response = await api.post(\"/checkout/portal\");\n            return {\n                success: true,\n                data: response.data\n            };\n        } catch (error) {\n            console.error(\"Get customer portal error:\", error);\n            return {\n                success: false,\n                error: error.response?.data?.detail || \"Failed to get customer portal.\"\n            };\n        }\n    },\n    /**\n   * Get current subscription status\n   * @returns {Promise<ApiResponse & { data?: SubscriptionStatusData }>} Subscription status or error\n   */ getSubscriptionStatus: async ()=>{\n        try {\n            const response = await api.get(\"/subscription/status\");\n            return {\n                success: true,\n                data: response.data\n            };\n        } catch (error) {\n            console.error(\"Get subscription status error:\", error);\n            return {\n                success: false,\n                error: error.response?.data?.detail || \"Failed to get subscription status.\"\n            };\n        }\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (api);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/api.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/next-auth","vendor-chunks/mime-db","vendor-chunks/axios","vendor-chunks/@babel","vendor-chunks/follow-redirects","vendor-chunks/debug","vendor-chunks/get-intrinsic","vendor-chunks/form-data","vendor-chunks/asynckit","vendor-chunks/combined-stream","vendor-chunks/mime-types","vendor-chunks/js-cookie","vendor-chunks/proxy-from-env","vendor-chunks/ms","vendor-chunks/supports-color","vendor-chunks/has-symbols","vendor-chunks/delayed-stream","vendor-chunks/function-bind","vendor-chunks/es-set-tostringtag","vendor-chunks/get-proto","vendor-chunks/call-bind-apply-helpers","vendor-chunks/dunder-proto","vendor-chunks/math-intrinsics","vendor-chunks/es-errors","vendor-chunks/has-flag","vendor-chunks/gopd","vendor-chunks/es-define-property","vendor-chunks/hasown","vendor-chunks/has-tostringtag","vendor-chunks/es-object-atoms","vendor-chunks/openid-client","vendor-chunks/uuid","vendor-chunks/oauth","vendor-chunks/@panva","vendor-chunks/yallist","vendor-chunks/preact-render-to-string","vendor-chunks/oidc-token-hash","vendor-chunks/preact","vendor-chunks/object-hash","vendor-chunks/cookie"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&page=%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute.js&appDir=E%3A%5CFullstack-applicationOfficial%5CFullstack-application%206.3%5CAdminDvojkaVit%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=E%3A%5CFullstack-applicationOfficial%5CFullstack-application%206.3%5CAdminDvojkaVit&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();